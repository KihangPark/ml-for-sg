@startuml

abstract class SourceGenerator {
    #_resource_handler : ResourceHandler
    +{abstract} generate_source_data() : void
}

class ShotgunSourceGenerator {
    -_get_raw_data(int, int) : list
    -_reformat_raw_data(list) : dict
    -_convert_raw_to_source_data(dict) : dict
    -_save_source_data(dict) : void
    +generate_source_data(int, int) : dict
}

class ShotgunSourceGenerator
    note left : generate_source_data function execute below sequencial processes. \n 1. gather raw data from shotgun. \n 2. convert raw data to panda data. \n 3. save panda data.

ShotgunSourceGenerator <|-- SourceGenerator
ShotgunSourceGenerator o-- ResourceHandler

class ResourceHandler {
    +raw_data_file_name : str
    +source_data_file_name : str
    +resource_data_file_name : str
    +source_analyze_report_file_name : str
    +train_result_report_file_name : str
    -_generate_raw_file_name() : str
    -_generate_source_file_name() : str
    -_generate_resource_file_name() : str
    -_generate_source_analyze_report_file_name() : str
    -_generate_train_result_report_file_name() : str
    +save_raw_data() : str
    +save_source_data() : str
    +convert_source_to_resource() : str
    +load_raw_data() : dict
    +load_source_data() : dict
    +load_resource_data() : dict
    +generate_source_analyze_configure_file_name() : str
    +load_source_analyze_configure() : dict
    +generate_train_result_file_name() : str
    +load_train_result() : dict
}

class ResourceHandler
    note left : this class control all of data resource and files.

class FeatureAnalyzer {
    -_resource_handler : ResourceHandler
    -_feature_analyze_report_file_name : str
    +df_x_full : dataframe
    +df_x_text_full : dataframe
    +df_y_full : dataframe
    +analyze() : void
    +generate_feature_delete_list_based_on_null_value(dataframe) : list
    +generate_feature_delete_list_based_on_cost_relation(dataframe, float) : list
    -_save_source_analyze_report() : void
}

class FeatureAnalyzer
    note left : this class generate analyzed report based on panda DataFrame data.

FeatureAnalyzer o-- ResourceHandler

abstract class BaseModel {
    -_resource_handler : ResourceHandler
    +{abstract} load_resource() : void
}

class LinearRegressionModel {
    -_resource_data : dict
    +fit() : void
    +load_resource_data() : void
    +load_trained_model() : void
}

BaseModel <|-- LinearRegressionModel
BaseModel o-- ResourceHandler

class Trainer {
    -_resource_handler : ResourceHandler
    -_data : dict
    +set_model() : void
    +train_model(BaseModel, list) : BaseModel, float
    +compare_models(list, list) : BaseModel, float
    +save_train_result() : void
}

Trainer o-- ResourceHandler
Trainer o-- BaseModel

class Estimator {
    -_model : LinearRegressionModel
    -_resource_handler : ResourceHandler
    +load_model(LinearRegressionModel) : void
    +estimate(dict) : int
}

Estimator o-- ResourceHandler
Estimator o-- LinearRegressionModel

class Estimator
    note left : this class is the actual class for other application. \n flask can be used for this method and reply proper estimated cost.

@enduml